{"version":3,"sources":["assets/logo.svg","assets/github-background.svg","assets/github-background-dark.svg","hooks/usePersistedState.ts","components/Header/styles.ts","components/Header/index.tsx","styles/themes/light.ts","styles/themes/dark.ts","styles/global.ts","services/api.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","usePersistedState","key","initialState","useState","storageValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","Container","styled","header","props","theme","colors","textSecundary","title","lighten","shade","Header","toggleTheme","pathname","useHistory","location","useContext","ThemeContext","src","logoImg","alt","onChange","checked","checkedIcon","uncheckedIcon","height","width","handleDiameter","offColor","onHandleColor","offHandleColor","onColor","to","size","error","background","titleSecundary","button","text","shape","createGlobalStyle","css","githubBackgroundDark","githubBackground","api","axios","create","baseURL","Title","h1","Form","form","hasError","Error","span","Repositories","div","Dashboard","newRepo","setNewRepo","inputError","setInputError","storagedRepositories","repositories","setRepositories","event","a","preventDefault","get","response","data","onSubmit","value","e","target","placeholder","type","map","repository","full_name","owner","avatar_url","login","description","color","RepositoryInfo","section","Issues","Repository","setRepository","issues","setIssues","params","useRouteMatch","Promise","all","repositoryResponse","issuesResponse","loadData","stargazers_count","forks_count","open_issues_count","issue","rel","id","href","html_url","user","Routes","path","exact","component","App","light","setTheme","useCallback","dark","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b250e4ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-background.0b819d63.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-background-dark.666f2825.svg\";","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\n\ntype Response<T> = [T, Dispatch<SetStateAction<T>>];\n\nfunction usePersistedState<T>(key: string, initialState: T): Response<T> {\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key);\n\n    if (storageValue) {\n      return JSON.parse(storageValue);\n    }\n    return initialState;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [state, key]);\n\n  return [state, setState];\n}\n\nexport default usePersistedState;\n","import styled from 'styled-components';\nimport { shade, lighten } from 'polished';\n\nexport const Container = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  > div {\n    display: flex;\n    align-items: center;\n\n    img {\n      margin-right: 30px;\n    }\n  }\n\n  a {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: ${props => props.theme.colors.textSecundary};\n    transition: color 0.3s;\n\n    &:hover {\n      color: ${props =>\n        props.theme.title === 'dark'\n          ? lighten(0.2, props.theme.colors.textSecundary)\n          : shade(0.2, props.theme.colors.textSecundary)};\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`;\n","import React, { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Switch from 'react-switch';\nimport { FiChevronLeft } from 'react-icons/fi';\nimport { ThemeContext } from 'styled-components';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Container } from './styles';\n\ninterface HaederProps {\n  toggleTheme(): void;\n}\n\nconst Header: React.FC<HaederProps> = ({ toggleTheme }) => {\n  const history = useHistory();\n  const { pathname } = history.location;\n\n  const { title } = useContext(ThemeContext);\n\n  return (\n    <>\n      <Container>\n        <div>\n          <img src={logoImg} alt=\"GitHub Explorer\" />\n          <Switch\n            onChange={toggleTheme}\n            checked={title === 'dark'}\n            checkedIcon={false}\n            uncheckedIcon={false}\n            height={10}\n            width={40}\n            handleDiameter={20}\n            offColor=\"#999\"\n            onHandleColor=\"#534F5E\"\n            offHandleColor=\"#534F5E\"\n            onColor=\"#F4EDE8\"\n          />\n        </div>\n        {pathname !== '/' && (\n          <Link to=\"/\">\n            <FiChevronLeft size={16} />\n            Voltar\n          </Link>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Header;\n","export default {\n  title: 'light',\n\n  colors: {\n    error: '#c53030',\n\n    background: '#F0F0F5',\n    title: '#3A3A3A',\n    titleSecundary: '#3D3D4D',\n    button: '#04d361',\n    text: '#737380',\n    textSecundary: '#a8a8b3',\n    shape: '#fff',\n  },\n};\n","export default {\n  title: 'dark',\n\n  colors: {\n    error: '#c53030',\n\n    background: '#312E38',\n    title: '#F4EDE8',\n    titleSecundary: '#F4EDE8',\n    button: '#04d361',\n    text: '#999591',\n    textSecundary: '#a8a8b3',\n    shape: '#534F5E',\n  },\n};\n","import { createGlobalStyle, css } from 'styled-components';\n\nimport githubBackground from '../assets/github-background.svg';\nimport githubBackgroundDark from '../assets/github-background-dark.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin:0;\n    padding:0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n      ${props =>\n        props.theme.title === 'dark'\n          ? css`\n              background: ${props.theme.colors.background}\n                url(${githubBackgroundDark}) no-repeat 70% top;\n            `\n          : css`\n              background: ${props.theme.colors.background}\n                url(${githubBackground}) no-repeat 70% top;\n            `}\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: ${props => props.theme.colors.title};\n\n  max-width: 450px;\n  line-height: 56px;\n\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 700px;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    border-radius: 5px 0 0 5px;\n    background: ${props => props.theme.colors.shape};\n    color: ${props => props.theme.colors.title};\n    border: 2px solid\n      ${props =>\n        props.hasError ? props.theme.colors.error : props.theme.colors.shape};\n    border-right: 0;\n\n    &::placeholder {\n      color: ${props => props.theme.colors.textSecundary};\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    background: ${props => props.theme.colors.button};\n    border: 0;\n    border-radius: 0 5px 5px 0;\n    color: #fff;\n    font-weight: bold;\n    transition: background-color 0.3s;\n\n    &:hover {\n      background: ${props => shade(0.2, props.theme.colors.button)};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: ${props => props.theme.colors.error};\n  margin-top: 8px;\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  a {\n    background: ${props => props.theme.colors.shape};\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    transition: transform 0.2s;\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: ${props => props.theme.colors.titleSecundary};\n      }\n\n      p {\n        font-size: 18px;\n        color: ${props => props.theme.colors.textSecundary};\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n    }\n  }\n`;\n","import React, { useState, FormEvent, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storagedRepositories = localStorage.getItem(\n      '@GitHubExplorer:repositories',\n    );\n\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GitHubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositório');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(`repos/${newRepo}`);\n\n      setRepositories([...repositories, response.data]);\n      setInputError('');\n      setNewRepo('');\n    } catch (err) {\n      setInputError('Erro na busca por esse repositório');\n    }\n  }\n\n  return (\n    <>\n      <Title>Explore repositórios no GitHub</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          onChange={e => setNewRepo(e.target.value)}\n          placeholder=\"Digite o nome do repositório\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map(repository => (\n          <Link\n            key={repository.full_name}\n            to={`/repositories/${repository.full_name}`}\n          >\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n\n            <FiChevronRight size={20} color=\"#cbcbd6\" />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const RepositoryInfo = styled.section`\n  margin-top: 80px;\n\n  header {\n    display: flex;\n    align-items: center;\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 24px;\n\n      strong {\n        font-size: 36px;\n        color: ${props => props.theme.colors.titleSecundary};\n      }\n\n      p {\n        font-size: 18px;\n        color: ${props => props.theme.colors.text};\n        margin-top: 4px;\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    list-style: none;\n    margin-top: 40px;\n\n    li {\n      & + li {\n        margin-left: 80px;\n      }\n\n      strong {\n        display: block;\n        font-size: 36px;\n\n        color: ${props => props.theme.colors.titleSecundary};\n      }\n\n      span {\n        display: block;\n        margin-top: 4px;\n        color: ${props => props.theme.colors.text};\n      }\n    }\n  }\n`;\n\nexport const Issues = styled.div`\n  margin-top: 80px;\n\n  a {\n    background: ${props => props.theme.colors.shape};\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    transition: transform 0.2s;\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: ${props => props.theme.colors.titleSecundary};\n      }\n\n      p {\n        font-size: 18px;\n        color: ${props => props.theme.colors.textSecundary};\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport { RepositoryInfo, Issues } from './styles';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n    async function loadData(): Promise<void> {\n      const [repositoryResponse, issuesResponse] = await Promise.all([\n        api.get(`repos/${params.repository}`),\n        api.get(`repos/${params.repository}/issues`),\n      ]);\n\n      setRepository(repositoryResponse.data);\n      setIssues(issuesResponse.data);\n    }\n\n    loadData();\n  }, [params.repository]);\n\n  return (\n    <>\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count}</strong>\n              <span>Start</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count}</strong>\n              <span>Issues abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n\n      <Issues>\n        {issues.map(issue => (\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            key={issue.id}\n            href={issue.html_url}\n          >\n            <div>\n              <strong>{issue.title}</strong>\n              <p>{issue.user.login}</p>\n            </div>\n\n            <FiChevronRight size={20} color=\"#cbcbd6\" />\n          </a>\n        ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Repository;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Repository from '../pages/Repository';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Dashboard} />\n    <Route path=\"/repositories/:repository+\" component={Repository} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { useCallback } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, DefaultTheme } from 'styled-components';\n\nimport usePersistedState from './hooks/usePersistedState';\nimport Header from './components/Header';\n\nimport light from './styles/themes/light';\nimport dark from './styles/themes/dark';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => {\n  const [theme, setTheme] = usePersistedState<DefaultTheme>(\n    '@GitHubExplorer:theme',\n    light,\n  );\n\n  const toggleTheme = useCallback(() => {\n    setTheme(theme.title === 'light' ? dark : light);\n  }, [theme, setTheme]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Header toggleTheme={toggleTheme} />\n        <Routes />\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}